[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "autonomous-code-improver"
version = "0.1.0"
description = "Autonomous multi-agent code improvement system"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.10"
dependencies = [
    "typer>=0.9.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "neo4j>=5.10.0",
    "psycopg2-binary>=2.9.0",
    "redis>=4.6.0",
    "nats-py>=2.6.0",
    "gitpython>=3.1.0",
    "tree-sitter>=0.20.0",
    "tree-sitter-python>=0.20.0",
    "tree-sitter-typescript>=0.20.0",
    "requests>=2.31.0",
    "httpx>=0.24.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.0.280",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "docker>=6.1.0",
    "prefect>=2.13.0",
    "jinja2>=3.1.0",
    "rich>=13.0.0",
    "click>=8.1.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.1.0",
    "tenacity>=8.2.0",
    "circuitbreaker>=2.0.0",
    "prometheus-client>=0.17.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.4.0",
    "pre-commit>=3.3.0",
    "ipython>=8.14.0",
    "ipykernel>=6.25.0",
    "notebook>=7.0.0",
]
test = [
    "pytest-xdist>=3.3.0",
    "pytest-benchmark>=4.0.0",
    "factory-boy>=3.3.0",
    "faker>=19.0.0",
    "responses>=0.23.0",
    "httpx>=0.24.0",
]

[project.scripts]
agent = "agent.cli:app"

[tool.setuptools.packages.find]
include = ["agent*"]

[tool.black]
line-length = 88
target-version = ["py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["agent"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["agent"]
omit = ["tests/*", "agent/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
